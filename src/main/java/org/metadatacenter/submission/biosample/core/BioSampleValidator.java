package org.metadatacenter.submission.biosample.core;

import generated.BioSampleValidate;
import generated.TypeActionStatus;
import generated.TypeStatus;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.metadatacenter.submission.biosample.AIRRTemplate;
import org.metadatacenter.submission.biosample.AMIA2016DemoBioSampleTemplate;
import org.metadatacenter.submission.biosample.CEDARBioSampleValidationResponse;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import javax.xml.datatype.DatatypeConfigurationException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

public class BioSampleValidator
{
  private static final String BIOSAMPLE_VALIDATION_URL = "https://www.ncbi.nlm.nih.gov/projects/biosample/validate/";

  private final AMIA2016DemoBioSampleTemplate2BioSampleConverter amia2016DemoBioSampleTemplate2BioSampleConverter;
  private final AIRRTemplate2BioSampleConverter airrTemplate2BioSampleConverter;

  public BioSampleValidator()
  {
    this.airrTemplate2BioSampleConverter = new AIRRTemplate2BioSampleConverter();
    this.amia2016DemoBioSampleTemplate2BioSampleConverter = new AMIA2016DemoBioSampleTemplate2BioSampleConverter();
  }

  /**
   * Take an instance of the CEDAR BioSample template developed for the 2016 AMIA demo, convert
   * it to a BioSample XML-based submission, submit it to the BioSample validator, and return
   * the results of the validation.
   * <p>
   * The {@link AMIA2016DemoBioSampleTemplate} class is generated by jsonschems2pojo from the
   * AMIA2016DemoBioSampleTemplate.json JSON Schema file in the resources directory. This file
   * contains the CEDAR template that defines the example BioSample submission used for the 2016 AMIA demo.
   * <p>
   * The {@link CEDARBioSampleValidationResponse} class is generated by jsonschems2pojo from the
   * CEDARBioSampleValidationResponse.json JSON Schema file in the resources directory. It
   * is the CEDAR representation of the response from the BioSample validator.
   *
   * @param amia2016DemoBioSampleSubmissionInstance An instance of the AMIA demo BioSample submission template
   * @return The BioSample validation response
   * @throws IOException                    If an IO error occurs during processing
   * @throws JAXBException                  If a JAXB error occurs during processing
   * @throws DatatypeConfigurationException If a configuration error occurs during processing
   */
  public CEDARBioSampleValidationResponse validateAMIA2016DemoBioSampleInstance(
    AMIA2016DemoBioSampleTemplate amia2016DemoBioSampleSubmissionInstance)
    throws IOException, JAXBException, DatatypeConfigurationException
  {
    CloseableHttpClient client = HttpClientBuilder.create().build();
    HttpPost post = new HttpPost(BIOSAMPLE_VALIDATION_URL);
    String submissionXML = this.amia2016DemoBioSampleTemplate2BioSampleConverter
      .generateBioSampleSubmissionXMLFromAMIA2016DemoBioSampleTemplateInstance(amia2016DemoBioSampleSubmissionInstance);
    StringEntity requestEntity = new StringEntity(submissionXML, ContentType.APPLICATION_XML);

    post.setHeader("Accept", "application/xml");
    post.setHeader("Content-type", "application/xml");
    post.setEntity(requestEntity);

    CloseableHttpResponse response = client.execute(post);

    try {
      if (response.getStatusLine().getStatusCode() == 200) {
        HttpEntity entity = response.getEntity();
        InputStream xmlResponseStream = entity.getContent();
        BioSampleValidate bioSampleValidationResponse = bioSampleXMLResponse2BioSampleValidate(xmlResponseStream);
        return bioSampleValidationResponse2CEDARValidationResponse(bioSampleValidationResponse);
      } else
        return generateUnexpectedStatusCodeCEDARBioSampleValidationResponse(response.getStatusLine().getStatusCode());
    } finally {
      response.close();
    }
  }

  /**
   * Take an instance of the CEDAR BioSample template developed for the 2016 AMIA demo, convert
   * it to a BioSample XML-based submission, submit it to the BioSample validator, and return
   * the results of the validation.
   * <p>
   * The {@link AIRRTemplate} class is generated by jsonschems2pojo from the
   * AIRRTemplate.json JSON Schema file in the resources directory. This file
   * contains the CEDAR template that defines the example BioSample submission generated from an AIRR template.
   * <p>
   * The {@link CEDARBioSampleValidationResponse} class is generated by jsonschems2pojo from the
   * CEDARBioSampleValidationResponse.json JSON Schema file in the resources directory. It
   * is the CEDAR representation of the response from the BioSample validator.
   *
   * @param airrInstance An instance of the AIRR template
   * @return The BioSample validation response
   * @throws IOException                    If an IO error occurs during processing
   * @throws JAXBException                  If a JAXB error occurs during processing
   * @throws DatatypeConfigurationException If a configuration error occurs during processing
   */
  public CEDARBioSampleValidationResponse validateAIRRInstance(AIRRTemplate airrInstance)
    throws IOException, JAXBException, DatatypeConfigurationException
  {
    CloseableHttpClient client = HttpClientBuilder.create().build();
    HttpPost post = new HttpPost(BIOSAMPLE_VALIDATION_URL);
    String submissionXML = this.airrTemplate2BioSampleConverter
      .generateBioSampleSubmissionXMLFromAIRRInstance(airrInstance);
    StringEntity requestEntity = new StringEntity(submissionXML, ContentType.APPLICATION_XML);

    post.setHeader("Accept", "application/xml");
    post.setHeader("Content-type", "application/xml");
    post.setEntity(requestEntity);

    CloseableHttpResponse response = client.execute(post);

    try {
      if (response.getStatusLine().getStatusCode() == 200) {
        HttpEntity entity = response.getEntity();
        InputStream xmlResponseStream = entity.getContent();
        BioSampleValidate bioSampleValidationResponse = bioSampleXMLResponse2BioSampleValidate(xmlResponseStream);
        return bioSampleValidationResponse2CEDARValidationResponse(bioSampleValidationResponse);
      } else
        return generateUnexpectedStatusCodeCEDARBioSampleValidationResponse(response.getStatusLine().getStatusCode());
    } finally {
      response.close();
    }
  }

  /**
   * The {@link CEDARBioSampleValidationResponse} class is generated by jsonschems2pojo from the
   * CEDARBioSampleValidationResponse.json JSON Schema file in the resources directory.
   *
   * @param statusCode A HTTP status code
   * @return A validation response message
   */
  private CEDARBioSampleValidationResponse generateUnexpectedStatusCodeCEDARBioSampleValidationResponse(int statusCode)
  {
    CEDARBioSampleValidationResponse cedarValidationResponse = new CEDARBioSampleValidationResponse();
    List<String> messages = new ArrayList<>();
    String message = "Unexpected status code " + statusCode + " returned by BioSample validation service";
    cedarValidationResponse.setMessages(messages);
    messages.add(message);
    cedarValidationResponse.setIsValid(false);

    return cedarValidationResponse;
  }

  /**
   * The {@link CEDARBioSampleValidationResponse} class is generated by jsonschems2pojo from the
   * CEDARBioSampleValidationResponse.json JSON Schema file in the resources directory.
   * <p>
   * The {@link BioSampleValidate} class is generated by JAXB from the submission-response.xsd file
   * in the resources directory. It represents a response from the BioSample validator.
   *
   * @param bioSampleValidationResponse A BioSample validation response
   * @return A CEDAR
   */
  private CEDARBioSampleValidationResponse bioSampleValidationResponse2CEDARValidationResponse(
    BioSampleValidate bioSampleValidationResponse)
  {
    CEDARBioSampleValidationResponse cedarValidationResponse = new CEDARBioSampleValidationResponse();
    List<String> messages = new ArrayList<>();
    cedarValidationResponse.setMessages(messages);

    List<TypeActionStatus> actionStatuses = bioSampleValidationResponse.getAction();
    if (!actionStatuses.isEmpty()) {
      TypeActionStatus actionStatus = actionStatuses.get(0);
      TypeStatus status = actionStatus.getStatus();
      if (status == TypeStatus.PROCESSED_OK)
        cedarValidationResponse.setIsValid(true);
      else
        cedarValidationResponse.setIsValid(false);

      // There can be warning messages from the validator even if validation passes
      List<TypeActionStatus.Response> statusResponses = actionStatus.getResponse();
      for (TypeActionStatus.Response statusResponse : statusResponses) {
        String message = statusResponse.getMessage().getValue();
        messages.add(message);
      }
    }
    return cedarValidationResponse;
  }

  /**
   * Generate a CEDAR-based response from an XML-based BioSample validation response.
   * <p>
   * The {@link BioSampleValidate} class is generated by JAXB from the submission-response.xsd file
   * in the resources directory. It represents a response from the BioSample validator. It can
   * be automatically translated into a REST service JSON response.
   *
   * @param xmlResponseStream A stream containing the XML response from the BioSample validator
   * @return A Java representation of the XML response
   * @throws JAXBException If there is an error during processing
   */
  private BioSampleValidate bioSampleXMLResponse2BioSampleValidate(InputStream xmlResponseStream) throws JAXBException
  {
    JAXBContext jaxbBioSampleValidateContext = JAXBContext.newInstance(BioSampleValidate.class);
    Unmarshaller jaxbBioSampleValidateUnmarshaller = jaxbBioSampleValidateContext.createUnmarshaller();
    BioSampleValidate bioSampleValidate = (BioSampleValidate)jaxbBioSampleValidateUnmarshaller
      .unmarshal(xmlResponseStream);
    return bioSampleValidate;
  }
}
